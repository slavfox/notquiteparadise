---
name: NQP - Checks

on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches:
      - '!develop'
      - '!master'
      - pypy


jobs:
  build:
    name: Checks
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8, pypy37]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        if: ${{ matrix.python-version == '3.8' }}
        with:
          python-version: ${{ matrix.python-version }}

      - name: Add python symlink for 3.8
        if: ${{ matrix.python-version == '3.8' }}
        run: |
          python -m pip install --upgrade pip
          ln -s $(which python) ./python.exe

      - name: Get pypy37 on Windows
        if: ${{ matrix.python-version == 'pypy37' && matrix.os == 'windows-latest' }}
        run: |
          cd vendor/
          curl -L -O https://downloads.python.org/pypy/pypy3.7-v7.3.2-win32.zip
          unzip pypy3.7-v7.3.2-win32.zip
          ln -s pypy3.7-v7.3.2-win32/pypy3.exe ./python.exe
          ./python.exe -m ensurepip -U

      - name: Get pypy37 on Ubuntu
        if: ${{ matrix.python-version == 'pypy37' && matrix.os == 'ubuntu-latest' }}
        run: |
          cd vendor/
          curl -L -O https://downloads.python.org/pypy/pypy3.7-v7.3.2-linux64.tar.bz2
          tar -xf pypy3.7-v7.3.2-linux64.tar.bz2
          ln -sf pypy3.7-v7.3.2-linux64/pypy3.exe ./python.exe
          ./python.exe -m ensurepip -U

      - name: Locate Pip Cache
        id: pip-cache
        run: echo "::set-output name=dir::$(./python.exe -m pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev
          sudo apt-get install python-sphinx

      - name: Install dependencies
        run: |
          ./python.exe -V
          ./python.exe -m pip install --upgrade poetry
          ./python.exe -m poetry config virtualenvs.create false
          ./python.exe -m poetry install --no-root -E docs

      - name: Check code formatting
        run: |
          ./python.exe -m black --check scripts/

      - name: mypy Type Check
        if: ${{ matrix.python-version == '3.8' }}
        run: |
          ./python.exe -m mypy scripts/

      - name: Pytest with Coverage
        run: |
          ./python.exe -m pytest --cov=nqp

      - name: Check Docs Build
        run: |
          sphinx-apidoc -o ./docs .
          cd docs
          sphinx-build -a -E --keep-going . _build
