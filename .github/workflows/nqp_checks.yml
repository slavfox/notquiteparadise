---
name: NQP - Checks

on:
  pull_request:
    types: [ opened, edited, synchronize ]
  push:
    branches:
      - '!develop'
      - '!master'


jobs:
  build:
    name: Checks
    matrix:
      os: [ubuntu-latest, windows-latest]
      python-version: [3.8, pypy37]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        if: ${{ matrix.python-version == "3.8" }}
        with:
          python-version: ${{ matrix.python-version }}

      - if: ${{ matrix.python-version == "pypy37" && matrix.os == "windows-latest" }}
        run: |
          cd vendor/
          curl -L -O https://downloads.python.org/pypy/pypy3.7-v7.3.2-win32.zip
          unzip pypy3.7-v7.3.2-win32.zip pypy37
          cd pypy37/
          echo ${{ env.working-directory }} >> $GITHUB_PATH
          ln -s ${{ env.working-directory }}/pypy3.exe ${{ env.working-directory }}/python
          pypy3.exe -m pip install --upgrade virtualenv
          pypy3.exe -m virtualenv ../civenv/
          call ../civenv/Scripts/activate.bat

      - name: Locate Pip Cache
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -V
          python -m pip install --upgrade poetry
          poetry config virtualenvs.create false
          poetry install --no-root -E docs

      - name: Check code formatting
        run: |
          poetry run python -m black --check scripts/

      - name: mypy Type Check
        if: ${{ matrix.python-version == "3.8" }}
        run: |
          poetry run python -m mypy scripts/

      - name: Pytest with Coverage
        run: |
          poetry run python -m pytest --cov=nqp

      - name: Check Docs Build
        run: |
          sphinx-apidoc -o ./docs .
          cd docs
          sphinx-build -a -E --keep-going . _build
